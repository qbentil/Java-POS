
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.HeadlessException;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.sql.*;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import javax.swing.JOptionPane;
import java.util.Date;
import javax.swing.table.DefaultTableModel;
import project.ConnectionProvider;
import project.CustomerValidation;
import project.ProductValidation;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author User
 */
public class Sales extends javax.swing.JFrame {
public int maxQty = 0;
public int finalTotal = 0;
    /**
     * Creates new form Sales
     */
    public Sales() {
        initComponents();
        //Date
        SimpleDateFormat dFormat = new SimpleDateFormat("dd-MM-yyy");
        Date date = new Date();
        dateInput.setText(dFormat.format(date));
        //TIme
        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("HH:mm:ss");
        LocalDateTime now = LocalDateTime.now();
        timeInput.setText(dtf.format(now));
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        dateLabel = new javax.swing.JLabel();
        timeLabel = new javax.swing.JLabel();
        dateInput = new javax.swing.JLabel();
        timeInput = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        buyerNameTextField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        buyerContactTextField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        buyerEmailTextField = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        buyerAddressTextField = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        pidTextField = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        pNameTextField = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        priceTextField = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        qtyTextField = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        descriptionTextField = new javax.swing.JTextField();
        addBtn = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JSeparator();
        jScrollPane5 = new javax.swing.JScrollPane();
        basketTable = new javax.swing.JTable();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        finalTotalTextField = new javax.swing.JTextField();
        paidAmountTextField = new javax.swing.JTextField();
        rAmountTextField = new javax.swing.JTextField();
        saveBtn = new javax.swing.JButton();
        resetBtn = new javax.swing.JButton();
        closeBtn = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTable3);

        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(jTable4);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(100, 150));
        setMinimumSize(new java.awt.Dimension(1164, 550));
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(1164, 550));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/billing frame.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 11, -1, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Billing ani.gif"))); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(118, 0, -1, -1));

        dateLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        dateLabel.setForeground(new java.awt.Color(255, 255, 255));
        dateLabel.setText("Date:");
        getContentPane().add(dateLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 30, 40, -1));

        timeLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        timeLabel.setForeground(new java.awt.Color(255, 255, 255));
        timeLabel.setText("Time:");
        getContentPane().add(timeLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 60, -1, -1));

        dateInput.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        dateInput.setForeground(new java.awt.Color(255, 255, 255));
        dateInput.setText("jLabel5");
        getContentPane().add(dateInput, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 30, -1, -1));

        timeInput.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        timeInput.setForeground(new java.awt.Color(255, 255, 255));
        timeInput.setText("jLabel6");
        getContentPane().add(timeInput, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 60, -1, -1));
        getContentPane().add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 110, 1164, 10));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("Buyer Details");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 126, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Name:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 169, -1, -1));

        buyerNameTextField.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        buyerNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buyerNameTextFieldActionPerformed(evt);
            }
        });
        getContentPane().add(buyerNameTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(67, 166, 170, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Contact No.:");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(272, 169, -1, -1));

        buyerContactTextField.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        buyerContactTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buyerContactTextFieldActionPerformed(evt);
            }
        });
        getContentPane().add(buyerContactTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(378, 166, 170, -1));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Email:");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(585, 169, -1, -1));

        buyerEmailTextField.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        buyerEmailTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buyerEmailTextFieldActionPerformed(evt);
            }
        });
        getContentPane().add(buyerEmailTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(637, 166, 170, -1));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Address:");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(844, 169, -1, -1));

        buyerAddressTextField.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        buyerAddressTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buyerAddressTextFieldActionPerformed(evt);
            }
        });
        getContentPane().add(buyerAddressTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(923, 166, 220, -1));
        getContentPane().add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 207, 1164, 10));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel10.setText("Product Details");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 223, -1, -1));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Product ID");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 266, -1, -1));

        pidTextField.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        pidTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pidTextFieldActionPerformed(evt);
            }
        });
        getContentPane().add(pidTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(104, 263, 60, -1));

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Name");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(168, 266, -1, -1));

        pNameTextField.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        pNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pNameTextFieldActionPerformed(evt);
            }
        });
        getContentPane().add(pNameTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(226, 263, 210, -1));

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Price (GHS)");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(454, 266, -1, -1));

        priceTextField.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        priceTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                priceTextFieldActionPerformed(evt);
            }
        });
        getContentPane().add(priceTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(568, 263, 80, -1));

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Quantity");
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(677, 266, -1, -1));

        qtyTextField.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        qtyTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qtyTextFieldActionPerformed(evt);
            }
        });
        getContentPane().add(qtyTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(764, 263, 50, -1));

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Description");
        getContentPane().add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(849, 266, -1, -1));

        descriptionTextField.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        descriptionTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                descriptionTextFieldActionPerformed(evt);
            }
        });
        getContentPane().add(descriptionTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(946, 263, 200, -1));

        addBtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        addBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/add.png"))); // NOI18N
        addBtn.setText("Add");
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });
        getContentPane().add(addBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(1045, 292, 101, -1));
        getContentPane().add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 344, 1164, 10));

        basketTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Description", "Price (GHS)", "Quantity", "Total (GHS)"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(basketTable);
        if (basketTable.getColumnModel().getColumnCount() > 0) {
            basketTable.getColumnModel().getColumn(0).setResizable(false);
            basketTable.getColumnModel().getColumn(1).setResizable(false);
            basketTable.getColumnModel().getColumn(2).setResizable(false);
            basketTable.getColumnModel().getColumn(3).setResizable(false);
            basketTable.getColumnModel().getColumn(4).setResizable(false);
        }

        getContentPane().add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 360, 555, 170));

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel16.setText("Invoice Summary");
        getContentPane().add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(607, 360, -1, -1));

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Total (GHS)");
        getContentPane().add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(607, 411, 90, -1));

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("Paid Amount");
        getContentPane().add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(607, 460, -1, -1));

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("Returned Amount");
        getContentPane().add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(607, 511, -1, -1));

        finalTotalTextField.setEditable(false);
        finalTotalTextField.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        getContentPane().add(finalTotalTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(774, 408, 250, -1));

        paidAmountTextField.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        paidAmountTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paidAmountTextFieldActionPerformed(evt);
            }
        });
        getContentPane().add(paidAmountTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(774, 457, 250, -1));

        rAmountTextField.setEditable(false);
        rAmountTextField.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        getContentPane().add(rAmountTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(774, 508, 250, -1));

        saveBtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        saveBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/save.png"))); // NOI18N
        saveBtn.setText("Save");
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });
        getContentPane().add(saveBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(1057, 405, -1, -1));

        resetBtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        resetBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Reset.png"))); // NOI18N
        resetBtn.setText("Reset");
        resetBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetBtnActionPerformed(evt);
            }
        });
        getContentPane().add(resetBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(1051, 454, -1, -1));

        closeBtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        closeBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/close Jframe.png"))); // NOI18N
        closeBtn.setText("Close");
        closeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeBtnActionPerformed(evt);
            }
        });
        getContentPane().add(closeBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(1053, 505, -1, -1));

        jLabel20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/billing background.png"))); // NOI18N
        getContentPane().add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buyerContactTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buyerContactTextFieldActionPerformed
        // TODO add your handling code here:
        String buyerContact = buyerContactTextField.getText();
        if(!buyerContact.equals(""))
        {
            try
            {
                Connection con = ConnectionProvider.getCon();
                PreparedStatement stmt;
                ResultSet rs;
                stmt = con.prepareStatement("SELECT * FROM `customer` WHERE `phone` = ?");
                stmt.setString(1, buyerContact);
                rs = stmt.executeQuery();
                if(rs.next()){
                    buyerNameTextField.setText(rs.getString(2));
                    buyerContactTextField.setText(rs.getString(3));
                    buyerEmailTextField.setText(rs.getString(4));
                    buyerAddressTextField.setText(rs.getString(5));
                }else{
                    JOptionPane.showMessageDialog(null, "No customer with Contact No. '"+buyerContact+"'");
                    buyerNameTextField.setText("");
                    buyerEmailTextField.setText("");
                    buyerAddressTextField.setText("");
                }
            }catch(HeadlessException | SQLException e)
            {
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
        }
        else
            JOptionPane.showMessageDialog(null, "Enter Customer ID to search for customer");
    }//GEN-LAST:event_buyerContactTextFieldActionPerformed

    private void closeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeBtnActionPerformed
        // TODO add your handling code here:
        setVisible(false);
    }//GEN-LAST:event_closeBtnActionPerformed

    private void buyerNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buyerNameTextFieldActionPerformed
        // TODO add your handling code here:
        String row = "name";
        String buyerName = buyerNameTextField.getText();
        if(!buyerName.equals(""))
        {
            CustomerValidation.customerSearch(row, buyerName, buyerNameTextField, buyerContactTextField, buyerEmailTextField, buyerAddressTextField);
        }
        else
            JOptionPane.showMessageDialog(null, "Enter "+row+" to search for customer");

    }//GEN-LAST:event_buyerNameTextFieldActionPerformed

    private void buyerEmailTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buyerEmailTextFieldActionPerformed
        // TODO add your handling code here:
        String row = "email";
        String buyerEmail = buyerEmailTextField.getText();
        if(!buyerEmail.equals(""))
        {
            CustomerValidation.customerSearch(row, buyerEmail, buyerNameTextField, buyerContactTextField, buyerEmailTextField, buyerAddressTextField);
        }
        else
            JOptionPane.showMessageDialog(null, "Enter "+row+" to search for customer");
    }//GEN-LAST:event_buyerEmailTextFieldActionPerformed

    private void buyerAddressTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buyerAddressTextFieldActionPerformed
        // TODO add your handling code here:
        String row = "address";
        String buyerAddress = buyerAddressTextField.getText();
        if(!buyerAddress.equals(""))
        {
            CustomerValidation.customerSearch(row, buyerAddress, buyerNameTextField, buyerContactTextField, buyerEmailTextField, buyerAddressTextField);
        }
        else
            JOptionPane.showMessageDialog(null, "Enter "+row+" to search for customer");
    }//GEN-LAST:event_buyerAddressTextFieldActionPerformed

    private void pidTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pidTextFieldActionPerformed
        // TODO add your handling code here:
        String row = "id";
        String rowText = pidTextField.getText();
        if(!rowText.equals(""))
        {
            ProductValidation.productSearch(row, rowText, pidTextField, pNameTextField, priceTextField, qtyTextField, descriptionTextField);
        }
        else
            JOptionPane.showMessageDialog(null, "Enter "+row+" to search for product");
    }//GEN-LAST:event_pidTextFieldActionPerformed

    private void pNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pNameTextFieldActionPerformed
        // TODO add your handling code here:
        String row = "name";
        String rowText = pNameTextField.getText();
        if(!rowText.equals(""))
        {
            ProductValidation.productSearch(row, rowText, pidTextField, pNameTextField, priceTextField, qtyTextField, descriptionTextField);
        }
        else
            JOptionPane.showMessageDialog(null, "Enter "+row+" to search for product");       
    }//GEN-LAST:event_pNameTextFieldActionPerformed

    private void priceTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_priceTextFieldActionPerformed
        // TODO add your handling code here:
        String row = "price";
        String rowText = priceTextField.getText();
        if(!rowText.equals(""))
        {
            ProductValidation.productSearch(row, rowText, pidTextField, pNameTextField, priceTextField, qtyTextField, descriptionTextField);
        }
        else
            JOptionPane.showMessageDialog(null, "Enter "+row+" to search for product");
    }//GEN-LAST:event_priceTextFieldActionPerformed

    private void descriptionTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_descriptionTextFieldActionPerformed
        // TODO add your handling code here:
        String row = "description";
        String rowText = descriptionTextField.getText();
        if(!rowText.equals(""))
        {
            ProductValidation.productSearch(row, rowText, pidTextField, pNameTextField, priceTextField, qtyTextField, descriptionTextField);
        }
        else
            JOptionPane.showMessageDialog(null, "Enter "+row+" to search for product");
    }//GEN-LAST:event_descriptionTextFieldActionPerformed

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        // TODO add your handling code here:
        int qty = Integer.parseInt(qtyTextField.getText());
        String pid = pidTextField.getText();
        if(!pid.equals(""))
        {
            try
            {
                Connection con = ConnectionProvider.getCon();
                PreparedStatement stmt;
                ResultSet rs;
                stmt = con.prepareStatement("SELECT `stock` FROM `product` WHERE `ID` = ?");
                stmt.setString(1, pid);
                rs = stmt.executeQuery();
                if(rs.next()){
                    maxQty = rs.getInt("stock");
                }else{
                    JOptionPane.showMessageDialog(null, "Product with ID `"+pid+"` does not exist.");
                }
            }catch(HeadlessException | SQLException e)
            {
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
            //Check for Customer requested product availabilty
            if(qty > maxQty)
                
            {
                JOptionPane.showMessageDialog(null, "This much of quantity is not available. Max qty is "+ maxQty);
                //qtyTextField.setText(Integer.toString(maxQty));
            }
            else
            {
                //JOptionPane.showMessageDialog(null, "Ready to add to table");
                String id = pidTextField.getText();
                String pName = pNameTextField.getText();
                String description = descriptionTextField.getText();
                int price = Integer.parseInt(priceTextField.getText());
                int quantity = Integer.parseInt(qtyTextField.getText());
                int total = price*quantity;
                DefaultTableModel model = (DefaultTableModel)basketTable.getModel();
                model.addRow(new Object[]{pName,description,price, quantity, total});
                finalTotal += total;
                String finalTotals = String.valueOf(finalTotal);
                finalTotalTextField.setText(finalTotals);
                //Paid Amount
                
                
            }
        }
        else
            JOptionPane.showMessageDialog(null, "Enter Customer ID to search for customer");
    }//GEN-LAST:event_addBtnActionPerformed

    private void qtyTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qtyTextFieldActionPerformed
        // TODO add your handling code here:
        int qty = Integer.parseInt(qtyTextField.getText());
        String pid = pidTextField.getText();
        if(!pid.equals(""))
        {
            try
            {
                Connection con = ConnectionProvider.getCon();
                PreparedStatement stmt;
                ResultSet rs;
                stmt = con.prepareStatement("SELECT `stock` FROM `product` WHERE `ID` = ?");
                stmt.setString(1, pid);
                rs = stmt.executeQuery();
                if(rs.next()){
                    maxQty = rs.getInt("stock");
                }else{
                    JOptionPane.showMessageDialog(null, "Product with ID `"+pid+"` does not exist.");
                }
            }catch(HeadlessException | SQLException e)
            {
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
            //Check for Customer requested product availabilty
            if(qty > maxQty)

            {
                JOptionPane.showMessageDialog(null, "This much of quantity is not available. Max qty is "+ maxQty);
                qtyTextField.setText(Integer.toString(maxQty));
            }
        }
        else
        JOptionPane.showMessageDialog(null, "No product selected");
    }//GEN-LAST:event_qtyTextFieldActionPerformed

    private void paidAmountTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paidAmountTextFieldActionPerformed
        // TODO add your handling code here:
        int paidAmount = Integer.parseInt(paidAmountTextField.getText());
        int dueAmount = finalTotal - paidAmount;
        rAmountTextField.setText(String.valueOf(dueAmount));
    }//GEN-LAST:event_paidAmountTextFieldActionPerformed

    private void resetBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetBtnActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        new Sales().setVisible(true);
    }//GEN-LAST:event_resetBtnActionPerformed

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed
        // TODO add your handling code here:
        String buyerName = buyerNameTextField.getText();
        String buyerContact = buyerContactTextField.getText();
        String buyerEmail = buyerEmailTextField.getText();
        String buyerAddress = buyerAddressTextField.getText();
        String path = "C:\\Users\\User\\Documents\\NetBeansProjects\\POS\\invoice\\";
        com.itextpdf.text.Document doc = new com.itextpdf.text.Document();
        try
        {
            DateTimeFormatter dtf = DateTimeFormatter.ofPattern("HH-mm-ss");
            LocalDateTime now = LocalDateTime.now();
            PdfWriter.getInstance(doc, new FileOutputStream(path+""+dateInput.getText()+"_"+dtf.format(now)+".pdf"));
            doc.open();
            Paragraph p1 = new Paragraph("                                                          PUKKA Point Of Sale v1.0\n                                                      Contact No.: +233556844332\n\n");
            doc.add(p1);
            Paragraph p2 = new Paragraph("Date & Time: "+dateInput.getText()+" "+timeInput.getText()+"\nBuyer Details \nName: "+buyerName+"\nContact No.: "+buyerContact+"\nEmail: "+buyerEmail+"\nAddress: "+buyerAddress+"\n\n");
            doc.add(p2);
            PdfPTable tb1 = new PdfPTable(5);
            tb1.addCell("Name");
            tb1.addCell("Description");
            tb1.addCell("Price");
            tb1.addCell("Quantity");
            tb1.addCell("Sub Total");
            for(int i = 0; i<basketTable.getRowCount(); i++)
            {
                String n = basketTable.getValueAt(i,0).toString();
                String d = basketTable.getValueAt(i,1).toString();
                String p = basketTable.getValueAt(i,2).toString();
                String q = basketTable.getValueAt(i,3).toString();
                String s = basketTable.getValueAt(i,4).toString();
                tb1.addCell(n);
                tb1.addCell(d);
                tb1.addCell(p);
                tb1.addCell(q);
                tb1.addCell(s);
            }
            doc.add(tb1);
            Paragraph p3 = new Paragraph("\nTotal: GHS"+finalTotalTextField.getText()+"\nPaid Amount: GHS"+paidAmountTextField.getText()+"\nReturned Amount: GHS"+rAmountTextField.getText()+"\n\n                                                   Thank you for shopping with us!.\n                                                         Pukka Web Services");
            doc.add(p3);
            JOptionPane.showMessageDialog(null, "Successfully Generated invoice");
            setVisible(false);
            new Sales().setVisible(true);
            
        }catch(DocumentException | HeadlessException | FileNotFoundException e)
        {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
        doc.close();
    }//GEN-LAST:event_saveBtnActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
////        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
////         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
////         */
////        try {
////            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
////                if ("Nimbus".equals(info.getName())) {
////                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
////                    break;
////                }
////            }
////        } catch (ClassNotFoundException ex) {
////            java.util.logging.Logger.getLogger(NewCustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
////        } catch (InstantiationException ex) {
////            java.util.logging.Logger.getLogger(NewCustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
////        } catch (IllegalAccessException ex) {
////            java.util.logging.Logger.getLogger(NewCustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
////        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
////            java.util.logging.Logger.getLogger(NewCustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
////        }
////        //</editor-fold>
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//          public void run() {
//                new Sales().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBtn;
    private javax.swing.JTable basketTable;
    private javax.swing.JTextField buyerAddressTextField;
    private javax.swing.JTextField buyerContactTextField;
    private javax.swing.JTextField buyerEmailTextField;
    private javax.swing.JTextField buyerNameTextField;
    private javax.swing.JButton closeBtn;
    private javax.swing.JLabel dateInput;
    private javax.swing.JLabel dateLabel;
    private javax.swing.JTextField descriptionTextField;
    private javax.swing.JTextField finalTotalTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable4;
    private javax.swing.JTextField pNameTextField;
    private javax.swing.JTextField paidAmountTextField;
    private javax.swing.JTextField pidTextField;
    private javax.swing.JTextField priceTextField;
    private javax.swing.JTextField qtyTextField;
    private javax.swing.JTextField rAmountTextField;
    private javax.swing.JButton resetBtn;
    private javax.swing.JButton saveBtn;
    private javax.swing.JLabel timeInput;
    private javax.swing.JLabel timeLabel;
    // End of variables declaration//GEN-END:variables
}
